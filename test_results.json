[
  {
    "test_name": "test_home_language",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:07:25",
    "file": "tests/test_home_language.py",
    "stack": "",
    "duration": "138.07초",
    "device": "Windows_Chrome"
  },
  {
    "test_name": "test_home_language",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:08:56",
    "file": "tests/test_home_language.py",
    "stack": "",
    "duration": "90.94초",
    "device": "Mobile_Chrome"
  },
  {
    "test_name": "test_home_landing_nologin",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:10:04",
    "file": "tests/test_home_landing_nologin.py",
    "stack": "",
    "duration": "68.37초",
    "device": "Windows_Chrome"
  },
  {
    "test_name": "test_home_landing_nologin",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:11:17",
    "file": "tests/test_home_landing_nologin.py",
    "stack": "",
    "duration": "72.23초",
    "device": "Mobile_Chrome"
  },
  {
    "test_name": "test_home_landing_login",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:12:22",
    "file": "tests/test_home_landing_login.py",
    "stack": "",
    "duration": "65.77초",
    "device": "Windows_Chrome"
  },
  {
    "test_name": "test_home_landing_login",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:13:33",
    "file": "tests/test_home_landing_login.py",
    "stack": "",
    "duration": "70.44초",
    "device": "Mobile_Chrome"
  },
  {
    "test_name": "test_home_reservation",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:15:29",
    "file": "tests/test_home_reservation.py",
    "stack": "",
    "duration": "115.83초",
    "device": "Windows_Chrome"
  },
  {
    "test_name": "test_cen_login",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:16:18",
    "file": "tests/test_cen_login.py",
    "stack": "",
    "duration": "49.53초",
    "device": "Windows_Chrome"
  },
  {
    "test_name": "test_cen_customer_register",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:17:11",
    "file": "tests/test_cen_customer_register.py",
    "stack": "",
    "duration": "52.93초",
    "device": "Windows_Chrome"
  },
  {
    "test_name": "test_cen_customer_edit",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:19:14",
    "file": "tests/test_cen_customer_edit.py",
    "stack": "",
    "duration": "123.30초",
    "device": "Windows_Chrome"
  },
  {
    "test_name": "test_cen_customer_search",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:19:56",
    "file": "tests/test_cen_customer_search.py",
    "stack": "",
    "duration": "41.31초",
    "device": "Windows_Chrome"
  },
  {
    "test_name": "test_cen_grade",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:20:35",
    "file": "tests/test_cen_grade.py",
    "stack": "",
    "duration": "39.53초",
    "device": "Windows_Chrome"
  },
  {
    "test_name": "test_cen_membership",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:21:34",
    "file": "tests/test_cen_membership.py",
    "stack": "",
    "duration": "58.35초",
    "device": "Windows_Chrome"
  },
  {
    "test_name": "test_cen_reservation_accept",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:22:28",
    "file": "tests/test_cen_reservation_accept.py",
    "stack": "",
    "duration": "54.33초",
    "device": "Windows_Chrome"
  },
  {
    "test_name": "test_cen_reservation_edit",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:23:10",
    "file": "tests/test_cen_reservation_edit.py",
    "stack": "",
    "duration": "41.87초",
    "device": "Windows_Chrome"
  },
  {
    "test_name": "test_cen_reservation_search",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:24:09",
    "file": "tests/test_cen_reservation_search.py",
    "stack": "",
    "duration": "59.38초",
    "device": "Windows_Chrome"
  },
  {
    "test_name": "test_cen_reservation_register",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:24:39",
    "file": "tests/test_cen_reservation_register.py",
    "stack": "",
    "duration": "29.40초",
    "device": "Windows_Chrome"
  },
  {
    "test_name": "test_cen_event_validation",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:25:20",
    "file": "tests/test_cen_event_validation.py",
    "stack": "",
    "duration": "41.56초",
    "device": "Windows_Chrome"
  },
  {
    "test_name": "test_cen_event_register",
    "status": "FAIL",
    "message": "FAILED tests/test_cen_event_register.py::test_register_event - AssertionError...",
    "timestamp": "2025-07-17 18:29:35",
    "file": "tests/test_cen_event_register.py",
    "stack": "============================= test session starts =============================\nplatform win32 -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0\nrootdir: C:\\Users\\kjeon\\OneDrive\\Desktop\\QA\\Centurion\nplugins: base-url-2.1.0, html-4.1.1, json-0.4.0, json-report-1.5.0, metadata-3.1.1, ordering-0.6, playwright-0.7.0\ncollected 1 item\n\ntests\\test_cen_event_register.py F                                       [100%]\n\n================================== FAILURES ===================================\n_____________________________ test_register_event _____________________________\n\npage = <Page url='https://stg.ceramiqueclinic.com/ko/removal'>\n\n>   ???\n\nc:\\Users\\kjeon\\OneDrive\\Desktop\\QA\\Home\\tests\\test_cen_event_register.py:236: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npage = <Page url='https://stg.ceramiqueclinic.com/ko/removal'>\nevent = {'display_period': '2025.07.17-2025.07.19', 'event_description': '\\uc5ec\\ub984\\ub9de\\uc774 \\ud53c\\ubd80 \\ub9ac\\ud504\\ub808\\uc2dc \\uc774\\ubca4\\ud2b8! \\\\n \\uc9c0\\uae08 \\uc608\\uc57d \\uc2dc \\ucd5c\\ub300 30% \\ud560\\uc778\\u2728 \\ubaa8\\uacf5, \\uc7a1\\ud2f0, \\ud0c4\\ub825\\uae4c\\uc9c0...\\u203b \\uc2dc\\uc220 \\uc804\\ud6c4 \\uc8fc\\uc758\\uc0ac\\ud56d \\ubc0f \\ubd80\\uc791\\uc6a9 \\uc124\\uba85\\uc744 \\uaf2d \\ud655\\uc778\\ud574\\uc8fc\\uc138\\uc694. #\\uc5ec\\ub984\\uc774\\ubca4\\ud2b8 #\\ud53c\\ubd80\\uad00\\ub9ac', 'event_name': '\\uc774\\ubca4\\ud2b8_PC_\\ud55c\\uad6d\\uc5b4_0717_1825', 'event_period': '-25.08.16', ...}\nis_mobile = False, is_english = False\n\n    def verify_event_on_homepage(page: Page, event: Dict[str, str], is_mobile: bool, is_english: bool):\n    \n    \n        # \\u2705 \\uc774\\ubca4\\ud2b8 \\ub9ac\\uc2a4\\ud2b8 \\ud654\\uba74\\uc73c\\ub85c \\uc774\\ub3d9\n        event_url = get_event_list_url(is_mobile, is_english)\n        page.goto(event_url)\n        page.wait_for_timeout(3000)\n    \n        # \\u2705 \\uc774\\ubca4\\ud2b8 \\ub178\\ucd9c \\uc5ec\\ubd80 \\ud655\\uc778\n        visible_on_list = False\n        items = page.locator('[data-testid=\"txt_event_title\"]')\n        count = items.count()\n    \n        visible_on_list = False\n    \n        for i in range(count):\n            title_el = items.nth(i)\n            title = title_el.inner_text().strip()\n    \n            print(f\"\\U0001f50d \\ube44\\uad50\\uc911: \\ud654\\uba74='{title}', JSON='{event['event_name']}'\")\n    \n            if title == event[\"event_name\"]:\n                # \\u2705 \\ud0c0\\uc774\\ud2c0 \\uae30\\uc900\\uc73c\\ub85c \\uc0c1\\uc704 div\\uc5d0\\uc11c \\uae30\\uac04, \\ubc84\\ud2bc \\ud0d0\\uc0c9\n                wrapper = title_el.locator(\"xpath=../../..\")  # 타이틀에서 3단계 상위로 올라감 (div.flex.w-full.flex-col → div.flex.w-full.flex-col → div.flex-col)\n    \n    \n                period = wrapper.locator('[data-testid=\"txt_event_period\"]').inner_text().strip()\n                print(f\"\\U0001f4c6 \\ud654\\uba74 \\uae30\\uac04='{period}', JSON \\uae30\\uac04='{event['event_period']}'\")\n    \n                if period.replace(\" \", \"\") == event[\"event_period\"].replace(\" \", \"\"):\n                    visible_on_list = True\n                    # \\u2705 \\uc0c1\\uc138 \\ubcf4\\uae30 \\uc9c4\\uc785\n                    wrapper.locator('[data-testid=\"btn_event\"]').click()\n                    page.wait_for_timeout(1000)\n                    break\n    \n        assert visible_on_list, f\"\\u274c \\ub9ac\\uc2a4\\ud2b8\\uc5d0 '{event['event_name']}' \\ub178\\ucd9c\\ub418\\uc9c0 \\uc54a\\uc74c\"\n    \n    \n        # \\u2705 \\uc0c1\\uc138 \\uc815\\ubcf4 \\ud655\\uc778\n        title_expected = \"Ceramique Event\" if is_english else \"세라미크 이벤트\"\n        expect(page.locator('[data-testid=\"txt_title\"]')).to_contain_text(title_expected)\n        expect(page.locator('[data-testid=\"txt_event_title\"]')).to_have_text(event[\"event_name\"])\n        expect(page.locator('[data-testid=\"txt_event_description\"]')).not_to_be_empty()\n    \n        print(f\"\\u2705 '{event['event_name']}' \\ub178\\ucd9c \\ud655\\uc778 \\uc644\\ub8cc\")\n    \n        # 예약 하러 가기 버튼 동작 확인\n        page.wait_for_timeout(1000)\n        page.click(f'[data-testid=\"btn_reservation\"]')\n        page.wait_for_timeout(3000)\n        expect(page.locator('[data-testid=\"txt_login\"]')).to_be_visible(timeout=3000)\n        print(\"\\u2705 \\uc608\\uc57d\\ud558\\ub7ec\\uac00\\uae30 \\ubc84\\ud2bc \\ub3d9\\uc791 \\ud655\\uc778 \\uc644\\ub8cc\")\n    \n    \n        # \\u2705 \\ud31d\\uc5c5 \\ud655\\uc778\n        popup_url = get_popup_url(is_mobile, is_english)\n        page.goto(popup_url)\n        page.wait_for_timeout(1000)\n    \n        popup_locator = page.locator('[data-testid=\"event_popup\"]')\n        popup_visible = popup_locator.is_visible()\n        expected_popup = event[\"popup_usage\"] == \"yes\"\n        assert popup_visible == expected_popup, (\n            f\"\\u274c \\ud31d\\uc5c5 \\ub178\\ucd9c \\uc5ec\\ubd80 \\uc624\\ub958: {popup_visible} (\\uc608\\uc0c1: {expected_popup})\"\n        )\n    \n    \n        # \\u2705 \\ud31d\\uc5c5 \\ud074\\ub9ad \\uc2dc \\uc774\\ub3d9 URL \\ud655\\uc778\n        if popup_visible:\n            popup_url_type = event[\"popup_url\"]\n    \n            popup_locator.click()\n            page.wait_for_load_state()\n            actual_url = page.url\n    \n            if popup_url_type == \"event\":\n>               assert \"/events\" in actual_url, (\n                    f\"\\u274c \\ud31d\\uc5c5 \\ud074\\ub9ad \\ud6c4 URL \\uc624\\ub958: {actual_url} (\\uc608\\uc0c1 \\ud3ec\\ud568: '/events')\"\nE                   AssertionError: \\u274c \\ud31d\\uc5c5 \\ud074\\ub9ad \\ud6c4 URL \\uc624\\ub958: https://stg.ceramiqueclinic.com/ko/removal (\\uc608\\uc0c1 \\ud3ec\\ud568: '/events')\n\nhelpers\\event_utils.py:199: AssertionError\n---------------------------- Captured stdout call -----------------------------\n\\u2705 0\\uac1c \\ud56d\\ubaa9 \\ubbf8\\ub178\\ucd9c \\ucc98\\ub9ac \\uc644\\ub8cc\\n\\U0001f50d \\ube44\\uad50\\uc911: \\ud654\\uba74='\\uc774\\ubca4\\ud2b8_PC_\\ud55c\\uad6d\\uc5b4_0717_1825', JSON='\\uc774\\ubca4\\ud2b8_PC_\\ud55c\\uad6d\\uc5b4_0717_1825'\\n\\U0001f4c6 \\ud654\\uba74 \\uae30\\uac04='- 25.08.16', JSON \\uae30\\uac04='-25.08.16'\\n\\u2705 '\\uc774\\ubca4\\ud2b8_PC_\\ud55c\\uad6d\\uc5b4_0717_1825' \\ub178\\ucd9c \\ud655\\uc778 \\uc644\\ub8cc\\n\\u2705 \\uc608\\uc57d\\ud558\\ub7ec\\uac00\\uae30 \\ubc84\\ud2bc \\ub3d9\\uc791 \\ud655\\uc778 \\uc644\\ub8cc\n--------------------------------- JSON report ---------------------------------\nreport saved to: .report.json\n=========================== short test summary info ===========================\nFAILED tests/test_cen_event_register.py::test_register_event - AssertionError...\n======================== 1 failed in 253.77s (0:04:13) ========================\n",
    "duration": "254.64초",
    "device": "Windows_Chrome"
  },
  {
    "test_name": "test_cen_event_edit",
    "status": "PASS",
    "message": "테스트 성공",
    "timestamp": "2025-07-17 18:31:36",
    "file": "tests/test_cen_event_edit.py",
    "stack": "",
    "duration": "120.92초",
    "device": "Windows_Chrome"
  }
]